version: "3.8"

services:
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    environment: 
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - fse_net
    ports: 
      - 27017:27017
    volumes:
      - mongo_data:/data/db
      - mongo_logs:/var/log/mongodb

    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet 

  
  neo4j:
    image: neo4j:latest
    container_name: neo4j
    restart: always
    environment:
      NEO4J_AUTH: none
    networks:
      - fse_net
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_data:/logs
    healthcheck:
      test: ["CMD", "neo4j", "status"]

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    networks:
      - fse_net
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
      - redis_logs:/var/log/redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]

  elasticsearch:
    image: bitnami/elasticsearch:latest
    container_name: elasticsearch
    restart: always
    environment:
      discovery.type: single-node
      xpack.security: enable
    networks:
      - fse_net
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - elasticsearch_logs:/usr/share/elasticsearch/logs
    healthcheck:
      test: ["CMD-SHELL", "curl localhost:9200/_cat/health"]

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: admin
      PGUSER: admin
      POSTGRES_PASSWORD: admin
    networks:
      - fse_net
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_logs:/var/log/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "admin", "-d", "mydb"]
    
  lab1:
    image: lab1:1.0
    container_name: lab1
    networks:
      - fse_net
    volumes:
      - lab1_data:/app
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:11000/ping || exit 1"]

  lab2:
    image: lab2:1.0
    container_name: lab2
    networks:
      - fse_net
    volumes:
      - lab2_data:/app
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:12000/ping || exit 1"]

  lab3:
      image: lab3:1.0
      container_name: lab3
      networks:
        - fse_net
      volumes:
        - lab3_data:/app
      healthcheck:
        test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:13000/ping || exit 1"]

  auth:
    image: auth:1.0
    container_name: auth
    networks:
      - fse_net
    volumes:
      - auth_data:/app
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:10000/ping || exit 1"]

  nginx:  
    image: nginx:1.25.3-alpine
    container_name: nginx
    ports:
      - "80:80"
    networks:
      - fse_net
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - lab1
      - lab2
      - lab3
      - auth
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]

      


networks:
  fse_net:

volumes:
  mongo_data:
  mongo_logs:
  neo4j_data:
  neo4j_logs:
  redis_data:
  redis_logs:
  elasticsearch_data:
  elasticsearch_logs:
  postgres_data:
  postgres_logs:
  lab1_data:
  lab2_data:
  lab3_data:
  auth_data:

  